
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND ARGUMENT CONSTANT EQ GT LABEL LOCAL LT NEG NOT NUMBER OR POINTER POP PUSH STATIC SUB TEMP THAT THISstmt : stmt stmtstmt : EQ\n            | GT\n            | LT\n    stmt : NEG\n            | NOT\n    stmt : ADD\n            | SUB\n            | OR\n            | AND\n    stmt : PUSH LOCAL NUMBER\n            | PUSH ARGUMENT NUMBER\n            | PUSH THIS NUMBER\n            | PUSH THAT NUMBER\n            | PUSH TEMP NUMBER\n            | PUSH CONSTANT NUMBER\n            | PUSH POINTER NUMBER\n            | PUSH STATIC NUMBER\n    stmt : POP LOCAL NUMBER\n            | POP ARGUMENT NUMBER\n            | POP THIS NUMBER\n            | POP THAT NUMBER\n            | POP TEMP NUMBER\n            | POP CONSTANT NUMBER\n            | POP POINTER NUMBER\n            | POP STATIC NUMBER\n    '
    
_lr_action_items = {'EQ':([0,1,2,3,4,5,6,7,8,9,10,13,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[2,2,-2,-3,-4,-5,-6,-7,-8,-9,-10,2,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'GT':([0,1,2,3,4,5,6,7,8,9,10,13,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[3,3,-2,-3,-4,-5,-6,-7,-8,-9,-10,3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'LT':([0,1,2,3,4,5,6,7,8,9,10,13,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[4,4,-2,-3,-4,-5,-6,-7,-8,-9,-10,4,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'NEG':([0,1,2,3,4,5,6,7,8,9,10,13,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[5,5,-2,-3,-4,-5,-6,-7,-8,-9,-10,5,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'NOT':([0,1,2,3,4,5,6,7,8,9,10,13,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[6,6,-2,-3,-4,-5,-6,-7,-8,-9,-10,6,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'ADD':([0,1,2,3,4,5,6,7,8,9,10,13,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[7,7,-2,-3,-4,-5,-6,-7,-8,-9,-10,7,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'SUB':([0,1,2,3,4,5,6,7,8,9,10,13,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[8,8,-2,-3,-4,-5,-6,-7,-8,-9,-10,8,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'OR':([0,1,2,3,4,5,6,7,8,9,10,13,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[9,9,-2,-3,-4,-5,-6,-7,-8,-9,-10,9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'AND':([0,1,2,3,4,5,6,7,8,9,10,13,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[10,10,-2,-3,-4,-5,-6,-7,-8,-9,-10,10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'PUSH':([0,1,2,3,4,5,6,7,8,9,10,13,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[11,11,-2,-3,-4,-5,-6,-7,-8,-9,-10,11,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'POP':([0,1,2,3,4,5,6,7,8,9,10,13,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[12,12,-2,-3,-4,-5,-6,-7,-8,-9,-10,12,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'$end':([1,2,3,4,5,6,7,8,9,10,13,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'LOCAL':([11,12,],[14,22,]),'ARGUMENT':([11,12,],[15,23,]),'THIS':([11,12,],[16,24,]),'THAT':([11,12,],[17,25,]),'TEMP':([11,12,],[18,26,]),'CONSTANT':([11,12,],[19,27,]),'POINTER':([11,12,],[20,28,]),'STATIC':([11,12,],[21,29,]),'NUMBER':([14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmt':([0,1,13,],[1,13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> stmt","S'",1,None,None,None),
  ('stmt -> stmt stmt','stmt',2,'p_program','VMTranslator.py',235),
  ('stmt -> EQ','stmt',1,'p_bool_op','VMTranslator.py',239),
  ('stmt -> GT','stmt',1,'p_bool_op','VMTranslator.py',240),
  ('stmt -> LT','stmt',1,'p_bool_op','VMTranslator.py',241),
  ('stmt -> NEG','stmt',1,'p_unary_op','VMTranslator.py',248),
  ('stmt -> NOT','stmt',1,'p_unary_op','VMTranslator.py',249),
  ('stmt -> ADD','stmt',1,'p_binary_op','VMTranslator.py',256),
  ('stmt -> SUB','stmt',1,'p_binary_op','VMTranslator.py',257),
  ('stmt -> OR','stmt',1,'p_binary_op','VMTranslator.py',258),
  ('stmt -> AND','stmt',1,'p_binary_op','VMTranslator.py',259),
  ('stmt -> PUSH LOCAL NUMBER','stmt',3,'p_push_op','VMTranslator.py',266),
  ('stmt -> PUSH ARGUMENT NUMBER','stmt',3,'p_push_op','VMTranslator.py',267),
  ('stmt -> PUSH THIS NUMBER','stmt',3,'p_push_op','VMTranslator.py',268),
  ('stmt -> PUSH THAT NUMBER','stmt',3,'p_push_op','VMTranslator.py',269),
  ('stmt -> PUSH TEMP NUMBER','stmt',3,'p_push_op','VMTranslator.py',270),
  ('stmt -> PUSH CONSTANT NUMBER','stmt',3,'p_push_op','VMTranslator.py',271),
  ('stmt -> PUSH POINTER NUMBER','stmt',3,'p_push_op','VMTranslator.py',272),
  ('stmt -> PUSH STATIC NUMBER','stmt',3,'p_push_op','VMTranslator.py',273),
  ('stmt -> POP LOCAL NUMBER','stmt',3,'p_pop_op','VMTranslator.py',280),
  ('stmt -> POP ARGUMENT NUMBER','stmt',3,'p_pop_op','VMTranslator.py',281),
  ('stmt -> POP THIS NUMBER','stmt',3,'p_pop_op','VMTranslator.py',282),
  ('stmt -> POP THAT NUMBER','stmt',3,'p_pop_op','VMTranslator.py',283),
  ('stmt -> POP TEMP NUMBER','stmt',3,'p_pop_op','VMTranslator.py',284),
  ('stmt -> POP CONSTANT NUMBER','stmt',3,'p_pop_op','VMTranslator.py',285),
  ('stmt -> POP POINTER NUMBER','stmt',3,'p_pop_op','VMTranslator.py',286),
  ('stmt -> POP STATIC NUMBER','stmt',3,'p_pop_op','VMTranslator.py',287),
]
