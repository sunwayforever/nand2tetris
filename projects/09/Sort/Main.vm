function Main.main 2
push constant 10
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push local 0
add
push constant 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push local 0
add
push constant 7
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push local 0
add
push constant 9
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push local 0
add
push constant 11
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push local 0
add
push constant 20
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push local 0
add
push constant 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 10
call Main.merge_sort 2
pop local 0
push local 0
push constant 10
call Main.print_array 2
pop temp 0
push constant 0
return
function Main.swap 1
push argument 1
push argument 0
add
pop pointer 1
push that 0
pop local 0
push argument 1
push argument 0
add
push argument 2
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 2
push argument 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Main.partition 3
push argument 1
pop local 2
push argument 1
push constant 1
add
pop argument 1
label WHILE_EXP0
push argument 1
push argument 2
gt
not
not
if-goto WHILE_END0
push argument 1
push argument 0
add
pop pointer 1
push that 0
push local 2
push argument 0
add
pop pointer 1
push that 0
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 1
add
pop argument 1
goto IF_END0
label IF_FALSE0
push argument 0
push local 2
push constant 1
add
push argument 1
call Main.swap 3
pop temp 0
push argument 0
push local 2
push local 2
push constant 1
add
call Main.swap 3
pop temp 0
push local 2
push constant 1
add
pop local 2
push argument 1
push constant 1
add
pop argument 1
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Main.quick_sort 1
push argument 1
push argument 2
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 0
push argument 1
push argument 2
call Main.partition 3
pop local 0
push argument 0
push argument 1
push local 0
push constant 1
sub
call Main.quick_sort 3
pop temp 0
push argument 0
push local 0
push constant 1
add
push argument 2
call Main.quick_sort 3
pop temp 0
push constant 0
return
function Main.copy_array 2
push argument 1
call Array.new 1
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push argument 1
lt
not
if-goto WHILE_END0
push local 1
push local 0
add
push local 1
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Main.print_array 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push local 0
push argument 0
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
call Output.println 0
pop temp 0
push constant 0
return
function Main.merge_sort 6
push argument 1
push constant 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
label IF_FALSE0
push argument 1
push constant 2
call Math.divide 2
pop local 0
push argument 0
push local 0
call Main.copy_array 2
pop local 1
push argument 0
push local 0
add
push argument 1
push local 0
sub
call Main.copy_array 2
pop local 2
push local 1
push local 0
call Main.merge_sort 2
pop local 1
push local 2
push argument 1
push local 0
sub
call Main.merge_sort 2
pop local 2
push constant 0
pop local 3
push constant 0
pop local 4
push constant 0
pop local 5
label WHILE_EXP0
push local 5
push argument 1
lt
not
if-goto WHILE_END0
push local 3
push local 0
eq
push local 4
push argument 1
push local 0
sub
eq
not
push local 3
push local 1
add
pop pointer 1
push that 0
push local 4
push local 2
add
pop pointer 1
push that 0
gt
and
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 5
push argument 0
add
push local 4
push local 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push constant 1
add
pop local 5
push local 4
push constant 1
add
pop local 4
goto IF_END1
label IF_FALSE1
push local 5
push argument 0
add
push local 3
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push constant 1
add
pop local 5
push local 3
push constant 1
add
pop local 3
label IF_END1
goto WHILE_EXP0
label WHILE_END0
push argument 0
return
