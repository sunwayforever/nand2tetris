
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'A AD AM AMD AND AT D EQUAL JEQ JGE JGT JLE JLT JMP JNE LABEL LEFT_P M MD MINUS NOT NUMBER OR PLUS RIGHT_P SEMI_COLONstmt : stmt stmt\n    stmt : LEFT_P LABEL RIGHT_Pstmt : AT NUMBER\n    stmt : AT LABEL\n    action : dest EQUAL compaction : compstmt : action SEMI_COLON jumpstmt : actionjump : JGT\n            | JEQ\n            | JGE\n            | JLT\n            | JNE\n            | JLE\n            | JMP\n    dest : M\n            | D\n            | MD\n            | A\n            | AM\n            | AD \n            | AMDcomp : NUMBER\n    comp : MINUS NUMBER\n    comp : D\n            | A\n            | M\n    comp : NOT D\n            | NOT A\n            | NOT M\n    comp : MINUS D\n            | MINUS A\n            | MINUS M\n    comp : D PLUS NUMBER\n            | A PLUS NUMBER\n            | M PLUS NUMBER\n            | D MINUS NUMBER\n            | A MINUS NUMBER\n            | M MINUS NUMBER    \n    comp : D PLUS A\n            | D PLUS M \n            | D MINUS A\n            | D MINUS M\n            | D AND A\n            | D AND M\n            | D OR A\n            | D OR M    \n    comp : A MINUS D\n            | M MINUS D\n    '
    
_lr_action_items = {'LEFT_P':([0,1,4,5,7,8,9,11,17,19,20,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[2,2,-23,-8,-6,-27,-25,-26,2,-3,-4,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'AT':([0,1,4,5,7,8,9,11,17,19,20,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[3,3,-23,-8,-6,-27,-25,-26,3,-3,-4,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'M':([0,1,4,5,7,8,9,11,15,16,17,19,20,22,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[8,8,-23,-8,-6,-27,-25,-26,34,37,8,-3,-4,50,56,59,61,63,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'D':([0,1,4,5,7,8,9,11,15,16,17,19,20,22,24,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[9,9,-23,-8,-6,-27,-25,-26,32,35,9,-3,-4,48,53,66,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'MD':([0,1,4,5,7,8,9,11,17,19,20,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[10,10,-23,-8,-6,-27,-25,-26,10,-3,-4,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'A':([0,1,4,5,7,8,9,11,15,16,17,19,20,22,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[11,11,-23,-8,-6,-27,-25,-26,33,36,11,-3,-4,49,55,58,60,62,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'AM':([0,1,4,5,7,8,9,11,17,19,20,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[12,12,-23,-8,-6,-27,-25,-26,12,-3,-4,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'AD':([0,1,4,5,7,8,9,11,17,19,20,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[13,13,-23,-8,-6,-27,-25,-26,13,-3,-4,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'AMD':([0,1,4,5,7,8,9,11,17,19,20,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[14,14,-23,-8,-6,-27,-25,-26,14,-3,-4,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'NUMBER':([0,1,3,4,5,7,8,9,11,15,17,19,20,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[4,4,19,-23,-8,-6,-27,-25,-26,31,4,-3,-4,4,51,52,54,57,64,65,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'MINUS':([0,1,4,5,7,8,9,11,17,19,20,22,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[15,15,-23,-8,-6,24,26,30,15,-3,-4,15,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,26,30,24,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'NOT':([0,1,4,5,7,8,9,11,17,19,20,22,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[16,16,-23,-8,-6,-27,-25,-26,16,-3,-4,16,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'$end':([1,4,5,7,8,9,11,17,19,20,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[0,-23,-8,-6,-27,-25,-26,-1,-3,-4,-24,-31,-32,-33,-28,-29,-30,-2,-7,-9,-10,-11,-12,-13,-14,-15,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'LABEL':([2,3,],[18,20,]),'SEMI_COLON':([4,5,7,8,9,11,31,32,33,34,35,36,37,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,],[-23,21,-6,-27,-25,-26,-24,-31,-32,-33,-28,-29,-30,-5,-25,-26,-27,-36,-39,-49,-34,-40,-41,-37,-42,-43,-44,-45,-46,-47,-35,-38,-48,]),'EQUAL':([6,8,9,10,11,12,13,14,],[22,-16,-17,-18,-19,-20,-21,-22,]),'PLUS':([8,9,11,48,49,50,],[23,25,29,25,29,23,]),'AND':([9,48,],[27,27,]),'OR':([9,48,],[28,28,]),'RIGHT_P':([18,],[38,]),'JGT':([21,],[40,]),'JEQ':([21,],[41,]),'JGE':([21,],[42,]),'JLT':([21,],[43,]),'JNE':([21,],[44,]),'JLE':([21,],[45,]),'JMP':([21,],[46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmt':([0,1,17,],[1,17,17,]),'action':([0,1,17,],[5,5,5,]),'dest':([0,1,17,],[6,6,6,]),'comp':([0,1,17,22,],[7,7,7,47,]),'jump':([21,],[39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> stmt","S'",1,None,None,None),
  ('stmt -> stmt stmt','stmt',2,'p_expression_stmt','assembler.py',101),
  ('stmt -> LEFT_P LABEL RIGHT_P','stmt',3,'p_expression_LABEL','assembler.py',109),
  ('stmt -> AT NUMBER','stmt',2,'p_expression_A_NUMBER','assembler.py',131),
  ('stmt -> AT LABEL','stmt',2,'p_expression_A_LABEL','assembler.py',144),
  ('action -> dest EQUAL comp','action',3,'p_expression_action_1','assembler.py',161),
  ('action -> comp','action',1,'p_expression_action_2','assembler.py',166),
  ('stmt -> action SEMI_COLON jump','stmt',3,'p_expression_C_1','assembler.py',171),
  ('stmt -> action','stmt',1,'p_expression_C_2','assembler.py',179),
  ('jump -> JGT','jump',1,'p_expression_jump','assembler.py',198),
  ('jump -> JEQ','jump',1,'p_expression_jump','assembler.py',199),
  ('jump -> JGE','jump',1,'p_expression_jump','assembler.py',200),
  ('jump -> JLT','jump',1,'p_expression_jump','assembler.py',201),
  ('jump -> JNE','jump',1,'p_expression_jump','assembler.py',202),
  ('jump -> JLE','jump',1,'p_expression_jump','assembler.py',203),
  ('jump -> JMP','jump',1,'p_expression_jump','assembler.py',204),
  ('dest -> M','dest',1,'p_expression_dest','assembler.py',210),
  ('dest -> D','dest',1,'p_expression_dest','assembler.py',211),
  ('dest -> MD','dest',1,'p_expression_dest','assembler.py',212),
  ('dest -> A','dest',1,'p_expression_dest','assembler.py',213),
  ('dest -> AM','dest',1,'p_expression_dest','assembler.py',214),
  ('dest -> AD','dest',1,'p_expression_dest','assembler.py',215),
  ('dest -> AMD','dest',1,'p_expression_dest','assembler.py',216),
  ('comp -> NUMBER','comp',1,'p_expression_comp_0','assembler.py',228),
  ('comp -> MINUS NUMBER','comp',2,'p_expression_comp_1','assembler.py',237),
  ('comp -> D','comp',1,'p_expression_comp_2','assembler.py',244),
  ('comp -> A','comp',1,'p_expression_comp_2','assembler.py',245),
  ('comp -> M','comp',1,'p_expression_comp_2','assembler.py',246),
  ('comp -> NOT D','comp',2,'p_expression_comp_3','assembler.py',257),
  ('comp -> NOT A','comp',2,'p_expression_comp_3','assembler.py',258),
  ('comp -> NOT M','comp',2,'p_expression_comp_3','assembler.py',259),
  ('comp -> MINUS D','comp',2,'p_expression_comp_4','assembler.py',271),
  ('comp -> MINUS A','comp',2,'p_expression_comp_4','assembler.py',272),
  ('comp -> MINUS M','comp',2,'p_expression_comp_4','assembler.py',273),
  ('comp -> D PLUS NUMBER','comp',3,'p_expression_comp_5','assembler.py',285),
  ('comp -> A PLUS NUMBER','comp',3,'p_expression_comp_5','assembler.py',286),
  ('comp -> M PLUS NUMBER','comp',3,'p_expression_comp_5','assembler.py',287),
  ('comp -> D MINUS NUMBER','comp',3,'p_expression_comp_5','assembler.py',288),
  ('comp -> A MINUS NUMBER','comp',3,'p_expression_comp_5','assembler.py',289),
  ('comp -> M MINUS NUMBER','comp',3,'p_expression_comp_5','assembler.py',290),
  ('comp -> D PLUS A','comp',3,'p_expression_comp_6','assembler.py',307),
  ('comp -> D PLUS M','comp',3,'p_expression_comp_6','assembler.py',308),
  ('comp -> D MINUS A','comp',3,'p_expression_comp_6','assembler.py',309),
  ('comp -> D MINUS M','comp',3,'p_expression_comp_6','assembler.py',310),
  ('comp -> D AND A','comp',3,'p_expression_comp_6','assembler.py',311),
  ('comp -> D AND M','comp',3,'p_expression_comp_6','assembler.py',312),
  ('comp -> D OR A','comp',3,'p_expression_comp_6','assembler.py',313),
  ('comp -> D OR M','comp',3,'p_expression_comp_6','assembler.py',314),
  ('comp -> A MINUS D','comp',3,'p_expression_comp_7','assembler.py',330),
  ('comp -> M MINUS D','comp',3,'p_expression_comp_7','assembler.py',331),
]
